<!doctype html>
<html>
<head>
<meta charset="utf-8">
<title>BananaSNS</title>
<script src="/socket.io/socket.io.js"></script>
<link href="/stylesheets/style.css" rel="stylesheet" type="text/css">
<link  href="/stylesheets/main.css" rel="stylesheet" type="text/css">
<link href="/stylesheets/jquery.mCustomScrollbar.css" rel="stylesheet" type="text/css">
<script src="/javascripts/jquery-1.9.1.min.js"></script>
<script>!window.jQuery && document.write(unescape('%3Cscript src="js/minified/jquery-1.9.1.min.js"%3E%3C/script%3E'))</script>
<script src="/javascripts/jquery.mCustomScrollbar.min.js"></script>

<!--
<script>

    (function($){
        $(window).load(function(){
            $("#friend_content").mCustomScrollbar({
        		autoDraggerLength:false
			});
        });
    })(jQuery);
</script>

-->
<!-- *************************************************************************************** -->
<link rel="stylesheet" href="http://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css">
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<script src="http://code.jquery.com/ui/1.10.3/jquery-ui.js"></script>

<!-- 화상채팅 스타일 및 스크립트 -->
  <style>
  .video_chat_draggable_container{
	float: left;
	width:1024px;
	z-index:26;
   }

  .video_chat_draggable_pannel_wrap{
	float:  left;
	width:  102px; 
	height: 110px; 
	background: #ffffff;
	z-index:26;
	display:none;
   }

   .video_chat_draggable_pannel_status_Bar{
	width:102px;
	height:23px;
	background:#bfe124;
	color:#ffffff;
	z-index:26;
   }

   .video_chat_draggable_pannel_status_Bar span{font-weight:800; padding-top:5px; display:block; text-align:center;z-index:26;}

   .video_chat_draggable_wrap{
    float:  left;
    width:  320px; 
    height: 264px; 
    border: 1px solid #efefef;
    background: #ffffff;
    z-index:26;
    display:none;
   }

   .video_chat_draggable_status_Bar{
	width:320px;
	height:23px;
	background:#bfe124;
	color:#ffffff;
	z-index:26;
   }

   .video_chat_draggable_status_Bar span{font-weight:800; display:inline-block; margin:4px 10px;z-index:26;}
  </style>
 
  <script>
  $(function() {
    $( "#video_chat_draggable_pannel" ).draggable({ snap: true });
    $( "#video_chat_draggable1" ).draggable({ snap: true });
	$( "#video_chat_draggable2" ).draggable({ snap: true });
	$( "#video_chat_draggable3" ).draggable({ snap: true });
	$( "#video_chat_draggable4" ).draggable({ snap: true });
	$( "#video_chat_draggable5" ).draggable({ snap: true });
	$( "#video_chat_draggable6" ).draggable({ snap: true });
  });
  </script>

<!-- 화상채팅 스타일 및 스크립트 -->

<!-- *************************************************************************************** -->

<script>
var socket;
var session;
$(document).ready(function () {
	

	socket = io.connect();
	socket.emit('get_session');
	//세션정보를 받아옴
	socket.on('get_session',function(data){
		session = data;
	});
	remote_queue_init();
	my_video_init();
	rtc_start();

	//
	function jsonToValue(session, name){
		var temp = session.split(name,2);
		var data = temp[1].split('\"',2);
		return data[0];
	}

	//client_1_4 새로고침 막기
	document.onkeydown = function(){
		if(event.keyCode == 116){
			event.keyCode = 2;
			return false;
		}
		else if(event.ctrlKey && (event.keyCode == 78 || event.keyCode == 82)){
			return false;
		}else if(event.keyCode == 8){
			return false;
		}
	}



	// client_1_4 친구불러오기 버튼 리스너
	$("#sssss").click(function(evt) {
		load();
	});

	var load = function () {	
		$.get('/member_list', function (data) {
			$("#friend_content").empty();
			
			$(data).each(function (i) {
				$("#friend_content").prepend(" <table class='item' border='0' cellpadding='0' cellpadding='0'><table>");
				$("#friend_content .item:first").append("<td width='35px'><img src='" +  jsonToValue(this.session,'\"photo\":\"') + "'></td>" );
				$("#friend_content .item:first").append("<td width='110px' class='profile_normal'>" + jsonToValue(this.session,'\"name\":\"') + "</td>" );
				$("#friend_content .item:first").append("<td width='20px'></td>" );
				$("#friend_content .item:first").append("<td width='35px'><input type='image' src='/images/btn_message_act.jpg' value=" + jsonToValue(this.session,'\"socketID":\"') + "/></td>" );
				$("#friend_content .item:first").append("<td width='26px'><input type='image' src='/images/btn_camchat_act.jpg' onclick=\"send_videocamReq('"+
				jsonToValue(this.session,'\"socketID\":\"')+
				"')\"/></td>");
			});
		});
	};

	load();
});


/************************************************************************************

				WebRtc를 이용한 화상채팅모듈

************************************************************************************/

var sourcevid;					// 자신의 비디오 엘리먼트
var remotevid = new Array();			// 원격 비디오 엘리먼트 리스트
var remotevid_queue = new Array();		// 원격 비디오 엘리먼트 관리를 위한 큐
var remotevid_form = new Array();		// 원격 비디오 폼의 엘리먼트 리스트
var remotevid_form_queue = new Array();		// 원격 비디오 폼의 엘리먼트 관리를 위한 큐
var connectPeerSession = new Array();		// remotevid 해당하는 세션리스트
var peerConn = new Array();			// remotevid에 해당하는 접속자리스트
var started = new Array();			// peerConn에 해당하는 접속자가 시작이 되었는지에 대한 여부

var localStream = null;				// 로컬스트림
var roomName;					// 방이름이 무엇인지(방장의 SOCKET_ID)
var timer;					// 타이머
var peerCount = 0;				// 접속자가 몇명 있는지
var grant_request_timer;			// 연결요청을 수신 시 발동 할 타이머

var mediaConstraints = {'mandatory': {'OfferToReceiveAudio': true,'OfferToReceiveVideo': true}};

// peer to peer 초기 연결 과정
function rtc_start() {
	
	//1_2. 화상채팅요청을 받음
	socket.on('videocam_req',function(data){
		recv_videocamReq(data);
	});
	
	//1_3 화상채팅요청 결과를 받고 결과에 따라 방 join 요청
	socket.on('videocam_res',function(data,req){
		if(req){
			send_request_joinRoom(session,data);
		}else{
			refuseMessage(data);
		}
	});
	
	socket.on('create_room', function(data){
		roomName = data.id;
		socket.emit('join_room',data,session,roomName);
	});
	
	//1_4 방 입장 요청을 받음
	socket.on('request_join_room',function(data,room){
		roomName = data.id;
		socket.emit('join_room',session,data,data.id);
	});
	
	//1_5 상대방이 방에 입장하였다는 알림을 받음
	socket.on('join_room',function(data){
		//remote_queue_init();
		//my_video_init();
		send_conn_list(data,data.socketID,connectPeerSession);
		connectPeerSession.push(data);
	});
	//1_6 WebRTC시작
	socket.on('start_rtc',function(data,list){
		
		
		connectPeerSession = list;
		connectPeerSession.push(data);
		peerCount=list.length;
		for(var i=0; i<connectPeerSession.length; i++){
			console.log("start_rtc - " + i + " "+ connectPeerSession[i].email);
		}
		timer = setInterval(connectInterval,400);
	});
	//1_7 접속자 추가, 원격 비디오 사용
	socket.on('peer_connect', function(session,socketID){
		connectPeerSession.push(session);
		peerCount++;
		remotevid.push(remotevid_queue.shift());
		console.log("peer_connect");

	});
	socket.on('connect', onChannelOpened);
	socket.on('message', onMessage);
}

// 1_1. 화상채팅요청을 보냄 
function send_videocamReq(socketID){
	socket.emit('videocam_req',session,socketID);
}
// 1_2. 화상채팅요청을 받고 메시지를 생성
function recv_videocamReq(data){
	var mgs_form = document.getElementById("videochat_msg");
	mgs_form.style.display = 'block';
	mgs_form.innerHTML = "<table border='0' cellpadding='0' cellspacing='0'>"+
		"<tr height='15px'><td></td></tr><tr height='61px'><td = width='16px'></td>"+
		"<td><img src='"+data.photo+"' width='49px' height='49px'></td>"+
		"<td width='9px'></td><td><table border='0' cellpadding='0' cellspacing='0'>"+
		"<tr><td><b>"+data.name+"</b></td></tr>"+
		"<tr height='10px'><td></td></tr><tr><td><b>화상채팅요청</b></td></tr>"+
		"<tr height='10px'><td></td></tr>"+
		"<tr><td>"+
		"<img src='/images/btn_accept.jpg' onclick=\"videocamReqAccept('"+data.socketID+
		"')\">&nbsp;&nbsp;<img src='/images/btn_refuse.jpg' onclick=\"videocamReqRepuse('"+data.socketID+
		"')\">"+
		"</td></tr></table></td></tr></table>"
		request_timer(data.socketID);		
}
//
function request_timer(socketID){
	grant_request_timer = window.setTimeout(function(){
			var mgs_form = document.getElementById("videochat_msg");
			mgs_form.style.display = 'none';
			videocamReqRepuse(socketID);
	},60000);
}
// 1_3_1. 화상채팅요청수락
function videocamReqAccept(socketID){
	clearTimeout(grant_request_timer);
	var a = document.getElementById("videochat_msg");
	a.style.display = 'none';
	socket.emit('videocam_res',session,socketID,true);
}
// 1_3_2.화상채팅요청거절
function videocamReqRepuse(socketID){
	var a = document.getElementById("videochat_msg");
	a.style.display = 'none';
	socket.emit('videocam_res',session,socketID,false);
}
// 1_4_1. 상대방이 요청수락 시 - 방 입장 or 방 입장 요청
function send_request_joinRoom(mySession,recvSession){
	if(peerCount==0){
		roomName = mySession.socket;
		socket.emit('create_room',mySession,recvSession.socketID);
	}else{
		socket.emit('request_join_room',session,recvSession.socketID,roomName);
		socket.emit('peer_connect',recvSession);
	}
	
}
// 1_4_2. 상대방이 요청거절 시- 거절메시지
function refuseMessage(senderSession){
	
}
//1_5. 자신이 관리하고 있는 리스트를 보냄.
function send_conn_list(data,socketID,list){
	socket.emit('send_connlist',session,socketID,list);	
	peerCount++;
	connectPeerSession.push(data);
	remotevid_form.push(remotevid_form_queue.shift());
	remotevid_form[length-1] = 'block';
}

//2_1 비디오 엘리먼트들을 초기화
function remote_queue_init(){
	remotevid[0] = document.getElementById('remotevideo1');
	remotevid[1] = document.getElementById('remotevideo2');
	remotevid[2] = document.getElementById('remotevideo3');
	remotevid[3] = document.getElementById('remotevideo4');
	remotevid_form_queue[0] = document.getElementById('video_chat_draggable2').style.display = 'none';
	remotevid_form_queue[1] = document.getElementById('video_chat_draggable3').style.display = 'none';
	remotevid_form_queue[2] = document.getElementById('video_chat_draggable4').style.display = 'none';
	remotevid_form_queue[3] = document.getElementById('video_chat_draggable5').style.display = 'none';

	for(var i=0; i<4; i++){
		started[i] = false;
	}
}
//2_2. 자신의 비디오,오디오 자원을 받음(초기화)
function my_video_init(){
	sourcevid = document.getElementById('sourcevideo');
	navigator.webkitGetUserMedia({video: true, audio: true}, successCallback, errorCallback);
	function successCallback(stream) {
		localStream = stream;
		sourcevid.src = webkitURL.createObjectURL(stream);
		sourcevid.play();		
	}
	function errorCallback(error) {
		console.error('An error occurred: [CODE ' + error.code + ']');
		return;
	}	
}
//2_3 비디오 사용하시겠습니까? 메시지에 허용이 될때까지 화면을 띄우지 않음.
function connectInterval(){
	if(sourcevid.src.length!=0){
		document.getElementById('video_chat_draggable1').style.display = 'block';
		document.getElementById('video_chat_draggable6').style.display = 'block';
		console.log("--------------------- length" + connectPeerSession.length);
		for(var i=0; i<connectPeerSession.length; i++){
			console.log("---------- index "+ i);
			remotevid.push(remotevid_queue.shift());
			remotevid_form.push(remotevid_form_queue.shift());
			remotevid_form[i] = 'block';
			connect(i);
			console.log("connect");
		}
		clearInterval(timer);
	}
}

//
function stopVideo(i) {
	sourcevid.src = "";
	localStream.stop();
}
//
function createOfferFailed() {
	console.log("Create Answer failed");
}
//
function connect(i) {
	if (!started[i] && localStream) {
		createPeerConnection(i);
		started[i] = true;
		createOffer(i);
		console.log("start " + started[i] + " index : " + i);

	} else {
		alert("Local stream not running yet - try again.");
		console.log("Local stream not running yet - try again.");
		console.log("start: "+started[i]);
	}
}
//
function createOffer(i){
	peerConn[i].createOffer(
		function(sessionDescription){
			var sdpMsg = sessionDescription;
			sdpMsg.sender = session;
			sdpMsg.receiver = connectPeerSession[i];
			peerConn[i].setLocalDescription(sdpMsg);
			console.log("Sending: SDP");
			console.log("Recv" + connectPeerSession[i].email);
			console.log(sdpMsg);
			socket.json.send(sdpMsg);
		}, createOfferFailed, mediaConstraints);
		console.log("createOffer");
}
function hangUp() {
	console.log("Hang up.");
	socket.json.send({type: "bye"});
}
function stop(i) {
	peerConn[i].close();
	peerConn[i] = null;
	started[i] = false;
	remotevid[i].src = "";
	remotevidQueue.push(remotevid[i].id);
}

function onChannelOpened(message) {
	console.log('Channel opened.');	
}

function createAnswerFailed() {
	console.log("Create Answer failed");
}

function onMessage(evt) {
	var i = getConnectPeerIndex(evt.sender);
	console.log("type:" + evt.type +" index :" + i + " peer" + evt.sender + " recv : " + evt.receiver);
	if (evt.type === 'offer') {
		console.log("Received offer...");
		console.log("Sender : "+evt.sender.email);
		console.log("Receiver : "+evt.receiver.email);
		console.log("Index : "+i);
		if (!started[i]) {
			createPeerConnection(i);
			started[i] = true;
		}
		console.log('Creating remote session description...');
		peerConn[i].setRemoteDescription(new RTCSessionDescription(evt));
		console.log('Sending answer...');
		console.log("Received offer...");
		console.log("Sender : "+session.email);
		console.log("Receiver : "+evt.sender.email);
		console.log("Index : "+i);
		peerConn[i].createAnswer(function(sessionDescription){
			var sdpMsg = sessionDescription;
			sdpMsg.sender = session;
			sdpMsg.receiver = evt.sender;
			peerConn[i].setLocalDescription(sdpMsg);
			console.log("Sending: SDP : "+sdpMsg.sender);
			console.log(sdpMsg);
			socket.json.send(sdpMsg);
		}
			, createAnswerFailed, mediaConstraints);
		} else if (evt.type === 'answer' && started[i]) {
		console.log('Received answer...');
		console.log("Sender : "+ evt.sender);
		console.log("Receiver : "+ evt.receiver);
		console.log("Index : "+ i);
		console.log('Setting remote session description...');
		peerConn[i].setRemoteDescription(new RTCSessionDescription(evt));
	    } else if (evt.type === 'candidate' && started[i]) {
		    console.log('Received ICE candidate...');
		var candidate = new RTCIceCandidate({
			sdpMLineIndex: evt.sdpMLineIndex,
			sdpMid: evt.sdpMid,
			candidate: evt.candidate,
			sender: session,
			receiver: evt.sender});
		console.log(candidate);
		peerConn[i].addIceCandidate(candidate);
		} else if (evt.type === 'bye' && started[i]) {
		console.log("Received bye");
		stop(i);
	}
}

function createPeerConnection(i) {
	console.log("Creating peer connection index " + i);
	var pc_config = {"iceServers": []};
	//var recvNum = connectPeerSession[i];
	try {
		peerConn[i] = new webkitRTCPeerConnection(pc_config);
	} catch (e) {
		console.log("Failed to create PeerConnection, exception: " + e.message);
	}
	// send any ice candidates to the other peer

	peerConn[i].onicecandidate = function(evt) {
		//console.log('Sending ICE candidate... : ' + evt.sender.email);
		//var i = getConnectPeerIndex(evt.sender);
		if (event.candidate) {
			console.log('Sending ICE candidate...2');
			console.log(evt.candidate);
			console.log(connectPeerSession[i].email);
			socket.json.send({type: "candidate",
				sdpMLineIndex: evt.candidate.sdpMLineIndex,
				sdpMid: evt.candidate.sdpMid,
				candidate: evt.candidate.candidate,
				sender: session,
				receiver: connectPeerSession[i]});
		} else {
			console.log("End of candidates.");
		}
	};
	console.log('Peer ' + i + ' Adding local stream...');
	peerConn[i].addStream(localStream);
	peerConn[i].addEventListener("addstream",onRemoteStreamAdded, false);
	peerConn[i].addEventListener("removestream", onRemoteStreamRemoved, false);
		// when remote adds a stream, hand it on to the local video element
	function onRemoteStreamAdded(event) {
		console.log('Peer ' + i + ' Added remote stream...');
		remotevid[i].src = webkitURL.createObjectURL(event.stream);
		remotevid_form[i] = 'block';
	}
		// when remote removes a stream, remove it from the local video element
	function onRemoteStreamRemoved(event) {
		console.log('Peer ' + event.sender + ' Remove remote stream...');
		remotevid[i].src = "";
	}
}

//
function connectPeerNumberPop(num){
	var cnt=0;
	for(; cnt < connectPeerNumber.length; cnt++)
		if(connectPeerNumber[cnt] == num)
			break;
	if(connectPeerNumber.length == cnt)
		return;
	else if (connectPeerNumber.length-1 == cnt)
		connectPeerNumber.pop();
	else{
		var temp = connectPeerNumber[cnt];
		connectPeerNumber[cnt] = connectPeerNumber.pop();
	}
}
function getConnectPeerIndex(data){
	for(var i=0; i<connectPeerSession.length; i++){
		console.log("list : " + connectPeerSession[i].email+" index : "+i);
		console.log("data : " + data.email);
		if(connectPeerSession[i].email == data.email)
			return i;
	}
}
</script>

</head>

<body>
<!-- wrap -->
<div id="wrap">
	<!-- header -->
	<div id="header" class="">
		<div id="logo">
        <a href="index.html"><img src="/images/logo.png"></a>
        </div>
        <div id="menu">
        <img src="/images/menu.jpg">
        </div>
	<div id="videochat_msg"></div>
	</div>
    <!-- //header -->
    <!-- container -->
  <div id="container" class="mainpage_container">

  		<!-- left -->
        <div id="left" class="mainpage_left">
        	<!-- profile -->
            <div id="profile" align="center">
            <table border="0" cellpadding="0" cellspacing="0">
            <tr height="12px"><td></td></tr>
            <tr>
            <td width="109px" align="center" valign="middle"> 
            <img src="/images/photo.jpg" id="profile_photo" name="profile_photo">
            </td>
            <td width="188px">
            <table border="0" cellpadding="0" cellspacing="0">
            <tr height="4px"><td></td></tr> 
            <tr><td class="username" align="left">심규태</td></tr>
            <tr height="7px"><td></td></tr>
            <tr><td class="profile_normal" align="left">1989년&nbsp;6월&nbsp;25일생</td></tr>
            <tr height="6px"><td></td></tr>
            <tr><td class="profile_normal" align="left">대구시 거주</td></tr>
            <tr height="6px"><td></td></tr>
            <tr><td align="left"><a href="#" class="profile_link">프로필 수정>></a></td></tr>
            <tr height="3px"><td></td></tr> 
            </table>
            </td>
            </tr>
            </table>
            </div>
            <!-- //profile -->
            <!-- friend -->
            <div id="friend">
            	<div id="friend_top">
                <table border="0" cellpadding="0" cellspacing="0">
                <tr height="18px"><td></td></tr>
                <tr>
                <td class="username" width="216px">접속중인 친구</td>
                <td class="profile_normal">(16/200)</td>
                </tr>
                </table>
                </div>
                <div id="friend_content" class="mCustomScrollBox mCS-light-thick">
                	<div class="conneting_user">
			
			</div>
			
                </div>
		<div style="width:100%;"><input id="sssss" type="button" value="sssss"></div>
            </div>
            <!-- //friend -->
        </div>
        <!-- //left -->
        <!-- right -->
        <div id="right" class="mainpage_right">
        	<div id="right_top">
            </div>
            <div id="right_content">
            <div id="timeline" class="">
            	<div style="margin-left:21px;"><br><p class="username">최근소식</p></div>
            	<div id="timeline_photo" class=""><img src="/images/photo_middel.jpg"></div>
                <div id="timeline_content" class="">
               	<table border="0" cellpadding="0" cellspacing="0">
                <tr height="20px"><td></td></tr>
                <tr height="25px">
                <td><a href="#" class="username">카가와 신지</a></td>
                </tr>
                <tr>
                <td class="timeline_content">나는 원숭이다 우끼끼 우끼끼<br>우끼끼 우끼끼 우끼끼 우끼끼</td>
                </tr>
                </table>
                <div id="timeline_comment">
                    <input type="image" src="/images/good.jpg"/>&nbsp;1&nbsp;<input type="image" src="/images/icon_comment.jpg"/>&nbsp;1&nbsp;
                    <div id="comment_write">
                   <table border="0" cellpadding="0"  cellspacing="0">
                   <tr height="5px"><td></td></tr>
                   <tr>
                   <td width="2px"></td>
                   <td><img src="/images/photo_small.jpg"></td>
                   <td width="5px"></td>
                   <td width="371px"><input type="text" size="60" style="border:1px #CCCCCC solid"></td>
                   </tr>
                   </table>
                   </div>
                   <div id="user_comment">
                   		<div id="comment">
                        <table border="0" cellpadding="0"  cellspacing="0">
                   		<tr height="5px"><td></td></tr>
                   		<tr>
                   		<td width="2px"></td>
                   		<td valign="top"><img src="/images/photo_small.jpg"></td>
                   		<td width="5px"></td>
                   		<td width="371px">
                        <p><a href="#" class="profile_link"><b>Cristiano Roanldo</b></a></p>야기분좋다~!!!!!!! ya~ feel so good~
                        <br>김일성 김정일 개객끼 우끼끼 우끼끼 우끼끼 우끼끼 우끼끼
                        </td>
                   		</tr>
                        <tr height="5px"><td></td></tr>
                   		</table>
                   		</div>
                   </div>
                </div>
            </div>
            <div id="timeline_photo" class=""><img src="/images/photo_middel.jpg"></div>
                <div id="timeline_content" class="">
               	<table border="0" cellpadding="0" cellspacing="0">
                <tr height="20px"><td></td></tr>
                <tr height="25px">
                <td><a href="#" class="username">카가와 신지</a></td>
                </tr>
                <tr>
                <td class="timeline_content">나는 원숭이다 우끼끼 우끼끼<br>우끼끼 우끼끼 우끼끼 우끼끼</td>
                </tr>
                </table>
                <div id="timeline_comment">
                    <input type="image" src="/images/good.jpg"/>&nbsp;1&nbsp;<input type="image" src="/images/icon_comment.jpg"/>&nbsp;1&nbsp;
                    <div id="comment_write">
                   <table border="0" cellpadding="0"  cellspacing="0">
                   <tr height="5px"><td></td></tr>
                   <tr>
                   <td width="2px"></td>
                   <td><img src="/images/photo_small.jpg"></td>
                   <td width="5px"></td>
                   <td width="371px"><input type="text" size="60" style="border:1px #CCCCCC solid"></td>
                   </tr>
                   </table>
                   </div>
                   <div id="user_comment">
                   		<div id="comment">
                        <table border="0" cellpadding="0"  cellspacing="0">
                   		<tr height="5px"><td></td></tr>
                   		<tr>
                   		<td width="2px"></td>
                   		<td valign="top"><img src="/images/photo_small.jpg"></td>
                   		<td width="5px"></td>
                   		<td width="371px">
                        <p><a href="#" class="profile_link"><b>Cristiano Roanldo</b></a></p>야기분좋다~!!!!!!! ya~ feel so good~
                        <br>김일성 김정일 개객끼 우끼끼 우끼끼 우끼끼 우끼끼 우끼끼
                        </td>
                   		</tr>
                        <tr height="5px"><td></td></tr>
                   		</table>
                   		</div>
                   </div>
                </div>
            </div>
            <div id="timeline_photo" class=""><img src="/images/photo_middel.jpg"></div>
                <div id="timeline_content" class="">
               	<table border="0" cellpadding="0" cellspacing="0">
                <tr height="20px"><td></td></tr>
                <tr height="25px">
                <td><a href="#" class="username">카가와 신지</a></td>
                </tr>
                <tr>
                <td class="timeline_content">나는 원숭이다 우끼끼 우끼끼<br>우끼끼 우끼끼 우끼끼 우끼끼</td>
                </tr>
                </table>
                <div id="timeline_comment">
                    <input type="image" src="/images/good.jpg"/>&nbsp;1&nbsp;<input type="image" src="/images/icon_comment.jpg"/>&nbsp;1&nbsp;
                    <div id="comment_write">
                   <table border="0" cellpadding="0"  cellspacing="0">
                   <tr height="5px"><td></td></tr>
                   <tr>
                   <td width="2px"></td>
                   <td><img src="/images/photo_small.jpg"></td>
                   <td width="5px"></td>
                   <td width="371px"><input type="text" size="60" style="border:1px #CCCCCC solid"></td>
                   </tr>
                   </table>
                   </div>
                   <div id="user_comment">
                   		<div id="comment">
                        <table border="0" cellpadding="0"  cellspacing="0">
                   		<tr height="5px"><td></td></tr>
                   		<tr>
                   		<td width="2px"></td>
                   		<td valign="top"><img src="/images/photo_small.jpg"></td>
                   		<td width="5px"></td>
                   		<td width="371px">
                        <p><a href="#" class="profile_link"><b>Cristiano Roanldo</b></a></p>야기분좋다~!!!!!!! ya~ feel so good~
                        <br>김일성 김정일 개객끼 우끼끼 우끼끼 우끼끼 우끼끼 우끼끼
                        </td>
                   		</tr>
                        <tr height="5px"><td></td></tr>
                   		</table>
                   		</div>
                   </div>
                </div>
            </div>
            <div id="timeline_photo" class=""><img src="/images/photo_middel.jpg"></div>
                <div id="timeline_content" class="">
               	<table border="0" cellpadding="0" cellspacing="0">
                <tr height="20px"><td></td></tr>
                <tr height="25px">
                <td><a href="#" class="username">카가와 신지</a></td>
                </tr>
                <tr>
                <td class="timeline_content">나는 원숭이다 우끼끼 우끼끼<br>우끼끼 우끼끼 우끼끼 우끼끼</td>
                </tr>
                </table>
                <div id="timeline_comment">
                    <input type="image" src="/images/good.jpg"/>&nbsp;1&nbsp;<input type="image" src="/images/icon_comment.jpg"/>&nbsp;1&nbsp;
                    <div id="comment_write">
                   <table border="0" cellpadding="0"  cellspacing="0">
                   <tr height="5px"><td></td></tr>
                   <tr>
                   <td width="2px"></td>
                   <td><img src="/images/photo_small.jpg"></td>
                   <td width="5px"></td>
                   <td width="371px"><input type="text" size="60" style="border:1px #CCCCCC solid"></td>
                   </tr>
                   </table>
                   </div>
                   <div id="user_comment">
                   		<div id="comment">
                        <table border="0" cellpadding="0"  cellspacing="0">
                   		<tr height="5px"><td></td></tr>
                   		<tr>
                   		<td width="2px"></td>
                   		<td valign="top"><img src="/images/photo_small.jpg"></td>
                   		<td width="5px"></td>
                   		<td width="371px">
                        <p><a href="#" class="profile_link"><b>Cristiano Roanldo</b></a></p>야기분좋다~!!!!!!! ya~ feel so good~
                        <br>김일성 김정일 개객끼 우끼끼 우끼끼 우끼끼 우끼끼 우끼끼
                        </td>
                   		</tr>
                        <tr height="5px"><td></td></tr>
                   		</table>
                   		</div>
                   </div>
                </div>
            </div>
            </div>
            <div id="right_bottom">
            </div>
        </div>
        <!-- //right -->
	</div>
    <!-- //container -->
	</div>
	<!-- video_chat_draggable_container -->
	<div id="video_chat_draggable_container" class="video_chat_draggable_container">
	  <div id="video_chat_draggable_pannel" class="video_chat_draggable_pannel_wrap">
		<div class="video_chat_draggable_pannel_status_Bar">
			<span>화상채팅</span>
		</div>

	  </div>
	  <div id="video_chat_draggable1" class="video_chat_draggable_wrap">
		<div class="video_chat_draggable_status_Bar">
			<span>심규태(나)<span>
		</div>
		<video id="sourcevideo" autoplay style="width: 320px; height: 240px;"></video>
	  </div>
	  <div id="video_chat_draggable2" class="video_chat_draggable_wrap">
		<div class="video_chat_draggable_status_Bar">
			<span>심규태(나)<span>
		</div>
		<video id="remotevideo1" autoplay style="width: 320px; height: 240px;"></video>
	  </div>
	  <div id="video_chat_draggable3" class="video_chat_draggable_wrap">
		<div class="video_chat_draggable_status_Bar">
			<span>심규태(나)<span>
		</div>
		<video id="remotevideo2" autoplay style="width: 320px; height: 240px;"></video>
	  </div>
	  <div id="video_chat_draggable4" class="video_chat_draggable_wrap">
		<div class="video_chat_draggable_status_Bar">
			<span>심규태(나)<span>
		</div>
		<video id="remotevideo3" autoplay style="width: 320px; height: 240px;"></video>
	  </div>
	  <div id="video_chat_draggable5" class="video_chat_draggable_wrap">
		<div class="video_chat_draggable_status_Bar">
			<span>심규태(나)<span>
		</div>
		<video id="remotevideo4" autoplay style="width: 320px; height: 240px;"></video>
	  </div>
	  <div id="video_chat_draggable6" class="video_chat_draggable_wrap">
		<div class="video_chat_draggable_status_Bar">
			<span>심규태(나)<span>
		</div>
	  </div>
	 </div><!-- //draggable_container -->

<!-- //wrap -->
<!-- footer -->
	<div id="footer">
    	<div id="footer_copyright">
        <img src="/images/copyright.jpg">
        </div>
    </div>
	<!-- //footer -->
</body>
</html>
